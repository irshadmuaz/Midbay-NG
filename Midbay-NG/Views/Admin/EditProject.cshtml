@model Midbay_NG.MyModels.Project

@{
    ViewBag.Title = "EditProject";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}

<h2>EditProject</h2>


@using (Html.BeginForm(Html.BeginForm("EditProject", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal" id="upload-container">
        <h4>Project</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Client, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Client, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Client, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="category" class="form-control">
                    @if (ViewBag.categories != null)
                    {
                        foreach (string t in ViewBag.categories)
                        {
                            if (t == Model.category)
                            {
                                <option selected="selected" value="@t">@t</option>
                            }
                            else
                            {
                                <option value="@t">@t</option>
                            }

                        }
                    }



                </select>

                @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-group">
            @Html.Label("Add category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    <input id="addcategory" type="checkbox" />
                    @Html.ValidationMessageFor(model => model.featured, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="cate" type="text" name="category" class="form-control" disabled="disabled" />
                @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.featured, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.featured)
                    @Html.ValidationMessageFor(model => model.featured, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group uploader">
            @Html.LabelFor(model => model.Images, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                <input class="btn btn-default btn-file" type="file" name="files" id="file1" />

                @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2"><a class="btn btn-danger" href="#">Delete</a></div>
            <div class="col-md-2"><img class="hidden img-responsive" id="ImgIn1" src="#" /></div>

        </div> 
        <div class="row">
            <div class="col-md-7 col-md-offset-5">
                @if (Model.Images != "")
                {
                    foreach (var t in Model.Images.Split(','))
                    {
                        <div class=" col-md-3 col-lg-2">
                            <img src="~/Uploads/ProjectImages/@t.Substring(t.LastIndexOf('\\') + 1)" class="img-responsive" style="height:100px;" />
                            <p hidden="hidden">@t</p>
                            <b hidden>@Model.Id</b>
                            <b class="btn btn-danger delmg">Delete</b>
                        </div>
                    }
                }
            </div>
        </div>     

      
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">

    $('#addcategory').change(function () {
        if (document.getElementById("addcategory").checked)
        {
            $('select').attr('disabled','disabled');
            $('#cate').removeAttr('disabled');
        }
        else {
            $('select').removeAttr('disabled');
            $('#cate').attr('disabled','disabled');
        }




    });
    $(".delmg").click(function () {
       
      
        var current = $(this);
        var img = $(this).siblings().filter('p').text();
        var Ids = $(this).siblings().filter('b').text();


        $.get('/Admin/DeletePI/', { image: img, Id: Ids }, function (data) {

            current.parent().remove();
        });

    });


</script>